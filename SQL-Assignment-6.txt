use training;

CREATE TABLE  PRODUCTS(
PRODUCT_CODE VARCHAR(20) PRIMARY KEY,
PRODUCT_NAME VARCHAR(100) NOT NULL,
PRICE INT NOT NULL,
QUANTITY_REMAINING INT NOT NULL,
QUANTITY_SOLD INT NOT NULL
);

INSERT INTO PRODUCTS VALUES('P1', 'IPHONE 13 PRO MAX', 1200, 5, 195),
('P2', 'AIRPODS PRO', 279, 10, 90),
('P3', 'MACBOOK PRO 16', 5000, 2, 48),
('P4', 'IPAD AIR', 650, 1, 9);

CREATE TABLE SALES(
OREDER_ID INT PRIMARY KEY,
ORDER_DATE DATE NOT NULL,
PRODUCT_CODE VARCHAR(20) REFERENCES PRODUCTS(PRODUCT_CODE),
QUANTITY_ORDERED INT,
SALES_PRICE INT
);

INSERT INTO SALES VALUES(1, '2022-01-10', 'P1', 100, 120000),
(2, '2022-01-20', 'P1', 50, 60000),
(3, '2022-02-05', 'P1', 45, 540000),
(4, '2022-01-15', 'P2', 50, 13950),
(5, '2022-03-25', 'P2', 40, 11160),
(6, '2022-02-25', 'P3', 10, 50000),
(7, '2022-03-15', 'P3', 10, 50000),
(8, '2022-03-25', 'P3', 20, 100000),
(9, '2022-04-21', 'P3', 8, 40000),
(10, '2022-04-27', 'p4', 9, 5850);


DELIMITER $
CREATE PROCEDURE SALE(IN ORDER_ID INT, IN PRODUCT_CODE VARCHAR(20),IN QUANTITY_ORDERED INT, OUT QUANTITY_REMAINING INT, OUT QUANTITY_SOLD INT)
BEGIN
SELECT QUANTITY_ORDERED FROM SALES INTO QUANTITY_SOLD;
SELECT (PRODUCTS.QUANTITY_SOLD - SALES.QUANTITY_ORDERED) INTO QUANTITY_REMAINING WHERE SALES.ODER_ID = ORDER_ID;
UPDATE PRODUCTS SET PRODUCTS.QUANTITY_REMAINING = (PRODUCTS.QUANTITY_REMAINING + QUANTITY_RAMAINING) WHERE PRODUCTS.PRODUCT_CODE = SALES.PRODUCT_CODE;
UPDATE PRODUCTS SET PRODUCTS.QUANTITY_SOLD = QUANTITY_SOLD;
SELECT * FROM PRODUCTS;
END$
DELIMITER ;

CALL SALE(1, 'P1', 100, @QUANTITY_REMAINING);
CALL SALE(1, 'P1', 100, @QUANTITY_SOLD);